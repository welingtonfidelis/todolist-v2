{"version":3,"sources":["components/input/index.tsx","components/modalTodo/index.tsx","components/primaryButton/index.tsx","components/todoItem/index.tsx","services/todoCrud.ts","store/todo/types.ts","store/todo/actions.ts","components/todoList/index.tsx","components/userAvatar/index.tsx","components/header/index.tsx","App.tsx","store/todo/reducers.ts","store/index.ts","index.tsx"],"names":["TextArea","Input","InputTextComponent","props","className","size","allowClear","children","InputTextAreaComponent","rows","InputMaskComponent","inputProps","initialFormvalues","id","color","description","date","time","ModalTodo","Form","useForm","form","useEffect","visible","setFormValues","todo","setFieldsValue","onOk","submit","onCancel","okText","cancelText","title","onFinish","initialValues","Item","name","style","display","rules","required","message","Group","value","background","placeholder","mask","PrimaryButtonComponent","type","TodoItemComponent","onClick","onEditTodo","done","onChangeStatusTodo","todoList","i","push","listTodo","filter","list","status","item","ok","data","error","console","log","START_LIST_LOAD","STOP_LIST_LOAD","START_SAVE_LOAD","STOP_SAVE_LOAD","START_ITEM_ACTION_LOAD","STOP_ITEM_ACTION_LOAD","UPDATE_LIST","ADD_ITEM","REMOVE_ITEM","UPDATE_ITEM","UPDATE_STATUS","todoUpdateList","payload","emptyTodo","TodoListComponent","useState","selectedOptionMenu","setSelectedOptionMenu","showTodoModal","setShowTodoModal","selectedTodo","setSelectedTodo","dispatch","useDispatch","todoOnReducer","useSelector","state","handleOpenModalTodo","handleCloseModalTodo","handleSelectOptionMenu","selected","undefined","handleUpdateStatusTodo","index","findIndex","updateStatusTodo","includes","todoRemoveItem","length","map","key","handleEditTodo","image","Empty","PRESENTED_IMAGE_SIMPLE","values","updateTodo","saveTodo","todoAddItem","UserAvatarComponent","HeaderComponent","App","initialState","loadingList","loadingSave","reducer","action","newState","newList","loadingItemAction","reducers","combineReducers","makeStore","createStore","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.ccba307b.chunk.js","sourcesContent":["import {\n  Input,\n  DatePickerProps,\n  TimePickerProps,\n  DatePicker,\n  TimePicker,\n  InputProps,\n} from \"antd\";\nimport { TextAreaProps } from \"antd/lib/input\";\nimport InputMask, { Props as InputMaskProps } from \"react-input-mask\";\n\nconst { TextArea } = Input;\n\nexport function InputTextComponent(props: InputProps) {\n  return (\n    <div className=\"input-text-area-component-content\">\n      <Input size=\"large\" allowClear={true} {...props}>\n        {props.children}\n      </Input>\n    </div>\n  );\n}\n\nexport function InputTextAreaComponent(props: TextAreaProps) {\n  return (\n    <div className=\"input-text-area-component-content\">\n      <TextArea size=\"large\" allowClear={true} rows={6} {...props}>\n        {props.children}\n      </TextArea>\n    </div>\n  );\n}\n\nexport function DatePickerComponent(props: DatePickerProps) {\n  return (\n    <div className=\"date-picker-component-content\">\n      <DatePicker size=\"large\" allowClear={true} {...props} />\n    </div>\n  );\n}\n\nexport function TimePickerComponent(props: TimePickerProps) {\n  return (\n    <div className=\"date-picker-component-content\">\n      <TimePicker size=\"large\" allowClear={true} {...props} />\n    </div>\n  );\n}\n\nexport const InputMaskComponent = (props: InputMaskProps) => (\n  <InputMask {...props}>\n    {(inputProps: InputProps) => (\n      <Input allowClear={true} size=\"large\" {...inputProps} />\n    )}\n  </InputMask>\n);\n","import { Modal, Form, Radio } from \"antd\";\nimport { useEffect } from \"react\";\nimport { TodoItemInterface } from \"../../store/todo/model\";\n\nimport {\n  InputTextAreaComponent,\n  InputMaskComponent,\n  InputTextComponent,\n} from \"../input\";\n\nimport \"./style.css\";\n\ninterface Props extends TodoItemInterface {\n  visible: boolean;\n  title: string;\n\n  onOk: (item: any) => void;\n  onCancel: () => void;\n}\n\nconst initialFormvalues = {\n  id: null,\n  color: null,\n  description: null,\n  date: \"\",\n  time: \"\",\n};\n\nexport const ModalTodo = (props: Props) => {\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    if (props.visible) setFormValues(props);\n  }, [props.visible]);\n\n  const setFormValues = (todo: TodoItemInterface) => {\n    form.setFieldsValue({\n      ...todo,\n    });\n  };\n\n  return (\n    <Modal\n      onOk={() => form.submit()}\n      visible={props.visible}\n      onCancel={props.onCancel}\n      okText=\"Salvar\"\n      cancelText=\"Cancelar\"\n      title={props.id ? \"Editar tarefa\" : \"Nova tarefa\"}\n    >\n      <Form\n        onFinish={props.onOk}\n        form={form}\n        className=\"modal-todo-component-content\"\n        initialValues={initialFormvalues}\n      >\n        <Form.Item name=\"id\" style={{ display: \"none\" }}>\n          <InputTextComponent />\n        </Form.Item>\n\n        <Form.Item\n          name=\"color\"\n          rules={[{ required: true, message: \"Escolha uma cor\" }]}\n          className=\"color-palette\"\n        >\n          <Radio.Group>\n            <Radio value=\"F4A261\" style={{ background: \"#F4A261\" }} />\n            <Radio value=\"FFC6FF\" style={{ background: \"#FFC6FF\" }} />\n            <Radio value=\"FFADAD\" style={{ background: \"#FFADAD\" }} />\n            <Radio value=\"CAFFBF\" style={{ background: \"#CAFFBF\" }} />\n            <Radio value=\"A0C4FF\" style={{ background: \"#A0C4FF\" }} />\n          </Radio.Group>\n        </Form.Item>\n\n        <Form.Item\n          name=\"description\"\n          rules={[\n            {\n              required: true,\n              message: \"Insira uma descrição\",\n            },\n          ]}\n          className=\"input-text\"\n        >\n          <InputTextAreaComponent placeholder=\"Descrição\" />\n        </Form.Item>\n\n        <div className=\"input-date-time\">\n          <Form.Item name=\"date\">\n            <InputMaskComponent mask=\"99/99/9999\" placeholder=\"Data\" />\n          </Form.Item>\n          <Form.Item name=\"time\">\n            <InputMaskComponent mask=\"99:99\" placeholder=\"Horário\" />\n          </Form.Item>\n        </div>\n      </Form>\n    </Modal>\n  );\n};\n","import { Button, ButtonProps } from \"antd\";\n\nimport \"./style.css\";\n\ninterface PropsInterface extends ButtonProps {}\n\nexport default function PrimaryButtonComponent(props: PropsInterface) {\n  return (\n    <div className=\"primary-button-component-content\">\n      <Button type=\"primary\" {...props}>{props.children}</Button>\n    </div>\n  )\n}","import {\n  FaPen,\n  FaRegCircle,\n  FaRegCalendarAlt,\n  FaClock,\n  FaCheckCircle,\n} from \"react-icons/fa\";\nimport { TodoItemInterface } from \"../../store/todo/model\";\n\nimport \"./style.css\";\n\ninterface ItemPropsIterface extends TodoItemInterface {\n  onEditTodo: () => void;\n  onChangeStatusTodo: () => void;\n}\n\nexport default function TodoItemComponent(props: ItemPropsIterface) {\n  return (\n    <div\n      className=\"todo-item-component-content\"\n      style={{ background: `#${props.color}` }}\n    >\n      <div className=\"col-1\">\n        <div className=\"description\">{props.description}</div>\n\n        <div className=\"date-time\">\n          <div className=\"date\">\n            <FaRegCalendarAlt />\n            <span>{props.date}</span>\n          </div>\n          <div className=\"time\">\n            <FaClock />\n            <span>{props.time}</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"col-2\">\n        <FaPen onClick={props.onEditTodo} />\n        {props.done ? (\n          <FaCheckCircle onClick={props.onChangeStatusTodo} />\n        ) : (\n          <FaRegCircle onClick={props.onChangeStatusTodo} />\n        )}\n      </div>\n    </div>\n  );\n}\n","import { TodoItemInterface } from \"../store/todo/model\";\n\n\nconst todoList: Array<TodoItemInterface> = [];\n\nfor (let i = 1; i <= 2; i += 1) {\n  todoList.push({\n    id: i + \"\",\n    description:\n      \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Perspiciatis consequatur explicabo, ut, dolores, id est tenetur alias dolor incidunt dolorum quae qui aperiam molestias deserunt mollitia aspernatur quos natus modi.\",\n    date: \"2021/11/01\",\n    time: \"12:30\",\n    done: false,\n    color: \"FFC6FF\",\n  });\n}\n\ninterface ResponseInterface {\n  ok: boolean;\n  data?: any;\n}\n\ninterface ListFilter {\n  status?: \"done\" | \"todo\";\n}\n\nexport const listTodo = (filter: ListFilter): ResponseInterface => {\n  try {\n    let list = todoList;\n\n    if(filter.status) {\n      list = list.filter(item => item.done === (filter.status === \"done\"));\n    }\n\n    return { ok:  true, data: list }\n    \n  } catch (error) {\n    console.log(\"SAVE NEW TODO ERROR\", error);\n    \n    return { ok: false };\n  }\n}\n\nexport const saveTodo = (todo: TodoItemInterface): ResponseInterface => {\n  try {\n    todo.id = todoList.length + 1 + \"\";\n\n    todoList.push(todo);\n    \n    return { ok:  true, data: todo }\n  } catch (error) {\n    console.log(\"SAVE NEW TODO ERROR\", error);\n    \n    return { ok: false };\n  }\n}\n\nexport const updateTodo = (todo: TodoItemInterface): ResponseInterface => {\n  try {\n    const index = todoList.findIndex((item) => item.id === todo.id);\n\n    todoList[index] = todo;\n    \n    return { ok:  true, data: todo }\n  } catch (error) {\n    console.log(\"UPDATE TODO ERROR\", error);\n    \n    return { ok: false };\n  }\n}\n\nexport const updateStatusTodo = (id: string, status: boolean): ResponseInterface => {\n  try {\n    const index = todoList.findIndex((item) => item.id === id);\n\n    todoList[index] = {...todoList[index], done: status};\n    \n    return { ok:  true, data: todoList[index] }\n  } catch (error) {\n    console.log(\"UPDATE TODO STATUS ERROR\", error);\n    \n    return { ok: false };\n  }\n}","export const START_LIST_LOAD = \"START_TODO_LIST_LOAD\";\nexport const STOP_LIST_LOAD = \"STOP_TODO_LIST_LOAD\";\nexport const START_SAVE_LOAD = \"START_TODO_SAVE_LOAD\";\nexport const STOP_SAVE_LOAD = \"STOP_TODO_SAVE_LOAD\";\nexport const START_ITEM_ACTION_LOAD = \"START_TODO_ITEM_ACTION_LOAD\";\nexport const STOP_ITEM_ACTION_LOAD = \"STOP_TODO_ITEM_ACTION_LOAD\";\nexport const UPDATE_LIST = \"UPDATE_TODO_LIST\";\nexport const ADD_ITEM = \"ADD_TODO_ITEM\";\nexport const REMOVE_ITEM = \"REMOVE_TODO_ITEM\";\nexport const UPDATE_ITEM = \"UPDATE_TODO_ITEM\";\nexport const UPDATE_STATUS = \"UPDATE_STATUS_TODO_ITEM\";\n","import { TodoItemInterface } from \"./model\";\nimport {\n  START_ITEM_ACTION_LOAD,\n  START_LIST_LOAD,\n  START_SAVE_LOAD,\n  STOP_ITEM_ACTION_LOAD,\n  STOP_LIST_LOAD,\n  STOP_SAVE_LOAD,\n  ADD_ITEM,\n  UPDATE_LIST,\n  UPDATE_ITEM,\n  UPDATE_STATUS,\n  REMOVE_ITEM,\n} from \"./types\";\n\nexport const todoStartListLoading = () => ({\n  type: START_LIST_LOAD,\n});\n\nexport const todoStopListLoading = () => ({\n  type: STOP_LIST_LOAD,\n});\n\nexport const todoStartSaveLoading = () => ({\n  type: START_SAVE_LOAD,\n});\n\nexport const todoStopSaveLoading = () => ({\n  type: STOP_SAVE_LOAD,\n});\n\nexport const todoStartItemActionLoading = (payload: number) => ({\n  type: START_ITEM_ACTION_LOAD,\n  payload,\n});\n\nexport const todoStopItemActionLoading = (payload: number) => ({\n  type: STOP_ITEM_ACTION_LOAD,\n  payload,\n});\n\nexport const todoUpdateList = (payload: TodoItemInterface[]) => ({\n  type: UPDATE_LIST,\n  payload,\n});\n\nexport const todoAddItem = (payload: TodoItemInterface) => ({\n  type: ADD_ITEM,\n  payload,\n});\n\nexport const todoRemoveItem = (payload: { id: string }) => ({\n  type: REMOVE_ITEM,\n  payload,\n});\n\nexport const todoUpdateItem = (payload: TodoItemInterface) => ({\n  type: UPDATE_ITEM,\n  payload,\n});\n\nexport const todoUpdateStatusItem = (payload: {\n  id: string;\n  status: boolean;\n}) => ({\n  type: UPDATE_STATUS,\n  payload,\n});\n","import { useEffect, useState } from \"react\";\nimport { Empty } from \"antd\";\n\nimport { ModalTodo } from \"../modalTodo\";\nimport PrimaryButtonComponent from \"../primaryButton\";\nimport TodoItemComponent from \"../todoItem\";\n\nimport {\n  listTodo,\n  saveTodo,\n  updateStatusTodo,\n  updateTodo,\n} from \"../../services/todoCrud\";\n\nimport \"./style.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { TodoItemInterface, TodoListInterface } from \"../../store/todo/model\";\nimport {\n  todoAddItem,\n  todoRemoveItem,\n  todoUpdateItem,\n  todoUpdateList,\n  todoUpdateStatusItem,\n} from \"../../store/todo/actions\";\n\nconst emptyTodo = {\n  color: \"\",\n  description: \"\",\n  date: \"\",\n  time: \"\",\n  done: false,\n};\n\nexport default function TodoListComponent() {\n  const [selectedOptionMenu, setSelectedOptionMenu] = useState(\"todo\");\n  const [showTodoModal, setShowTodoModal] = useState(false);\n  const [selectedTodo, setSelectedTodo] =\n    useState<TodoItemInterface>(emptyTodo);\n\n  const dispatch = useDispatch();\n\n  const todoOnReducer = useSelector(\n    (state: { todo: TodoListInterface }) => state.todo\n  );\n\n  useEffect(() => {\n    const { ok, data } = listTodo({ status: \"todo\" });\n    if (ok) dispatch(todoUpdateList(data));\n  }, []);\n\n  const handleOpenModalTodo = () => {\n    setShowTodoModal(true);\n  };\n\n  const handleCloseModalTodo = () => {\n    setShowTodoModal(false);\n    setSelectedTodo(emptyTodo);\n  };\n\n  const handleEditTodo = (item: TodoItemInterface) => {\n    setSelectedTodo(item);\n    handleOpenModalTodo();\n  };\n\n  const handleSelectOptionMenu = (selected: \"done\" | \"todo\" | \"all\") => {\n    setSelectedOptionMenu(selected);\n\n    const status = selected !== \"all\" ? selected : undefined;\n\n    const { ok, data } = listTodo({ status });\n\n    if (ok) dispatch(todoUpdateList(data));\n  };\n\n  const handleSaveTodo = (values: TodoItemInterface) => {\n    values.date = values.date || \"\";\n    values.time = values.time || \"\";\n\n    if (values.id) {\n      const { ok, data } = updateTodo(values);\n\n      if (ok) dispatch(todoUpdateItem(data));\n    } else {\n      const { ok, data } = saveTodo(values);\n\n      if (ok) dispatch(todoAddItem(data));\n    }\n\n    handleCloseModalTodo();\n  };\n\n  const handleUpdateStatusTodo = (id: string, status: boolean) => {\n    const { ok, data } = updateStatusTodo(id, status);\n\n    if (ok) {\n      dispatch(todoUpdateStatusItem({ id, status }));\n\n      if (\n        (status && ![\"done\", \"all\"].includes(selectedOptionMenu)) ||\n        (!status && [\"done\"].includes(selectedOptionMenu))\n      ) {\n        dispatch(todoRemoveItem({ id }));\n      }\n    }\n  };\n\n  return (\n    <div className=\"todo-list-component-content\">\n      <div className=\"new-todo-content\">\n        <span>Aqui está o que temos para fazer.</span>\n        <PrimaryButtonComponent onClick={handleOpenModalTodo}>\n          Nova tarefa\n        </PrimaryButtonComponent>\n      </div>\n\n      <div className=\"menu\">\n        <span\n          className={selectedOptionMenu === \"done\" ? \"menu-selected\" : \"\"}\n          onClick={() => handleSelectOptionMenu(\"done\")}\n        >\n          Feitas\n        </span>\n        <span\n          className={selectedOptionMenu === \"todo\" ? \"menu-selected\" : \"\"}\n          onClick={() => handleSelectOptionMenu(\"todo\")}\n        >\n          À fazer\n        </span>\n        <span\n          className={selectedOptionMenu === \"all\" ? \"menu-selected\" : \"\"}\n          onClick={() => handleSelectOptionMenu(\"all\")}\n        >\n          Todas\n        </span>\n      </div>\n\n      <div className=\"list\">\n        {todoOnReducer.list.length ? (\n          todoOnReducer.list.map((item: TodoItemInterface) => (\n            <TodoItemComponent\n              {...item}\n              key={item.id}\n              onEditTodo={() => handleEditTodo(item)}\n              onChangeStatusTodo={() =>\n                handleUpdateStatusTodo(item.id!, !item.done)\n              }\n            />\n          ))\n        ) : (\n          <Empty\n            description=\"Lista vazia\"\n            className=\"list-empty\"\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n          />\n        )}\n      </div>\n\n      <ModalTodo\n        visible={showTodoModal}\n        title=\"Nova tarefa\"\n        onOk={handleSaveTodo}\n        onCancel={handleCloseModalTodo}\n        {...selectedTodo}\n      />\n    </div>\n  );\n}\n","import { FaUserCircle } from \"react-icons/fa\";\n\nimport \"./style.css\";\n\nexport default function UserAvatarComponent() {\n  return (\n    <div className=\"user-avatar-component-content\">\n      <FaUserCircle />\n    </div>\n  )\n}","import UserAvatarComponent from \"../userAvatar\";\nimport \"./style.css\";\n\nexport default function HeaderComponent() {\n  return (\n    <div className=\"header-content\">\n      <span>Olá, Seja bem vindo(a) de volta!</span>\n      <UserAvatarComponent />\n    </div>\n  );\n}\n","import TodoListComponent from \"./components/todoList\";\nimport HeaderComponent from \"./components/header\";\n\nimport \"./app.css\";\n\nfunction App() {\n  return (\n    <div className=\"app-content\">\n      <HeaderComponent />\n      <TodoListComponent />\n    </div>\n  );\n}\n\nexport default App;\n","import { TodoListInterface } from \"./model\";\nimport {\n  START_LIST_LOAD,\n  START_SAVE_LOAD,\n  STOP_LIST_LOAD,\n  STOP_SAVE_LOAD,\n  ADD_ITEM,\n  START_ITEM_ACTION_LOAD,\n  STOP_ITEM_ACTION_LOAD,\n  UPDATE_LIST,\n  UPDATE_ITEM,\n  UPDATE_STATUS,\n  REMOVE_ITEM,\n} from \"./types\";\n\nconst initialState: TodoListInterface = {\n  loadingList: false,\n  loadingSave: false,\n  list: [],\n};\n\ninterface Action {\n  type: string;\n  payload: any;\n}\n\nconst reducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case START_LIST_LOAD: {\n      const newState = { ...state, loadingList: true };\n\n      return newState;\n    }\n\n    case STOP_LIST_LOAD: {\n      const newState = { ...state, loadingList: false };\n\n      return newState;\n    }\n\n    case START_SAVE_LOAD: {\n      const newState = { ...state, loadingSave: true };\n\n      return newState;\n    }\n\n    case STOP_SAVE_LOAD: {\n      const newState = { ...state, loadingSave: false };\n\n      return newState;\n    }\n\n    case START_ITEM_ACTION_LOAD: {\n      const index = action.payload;\n      const newList = state.list;\n      newList[index] = { ...newList[index], loadingItemAction: true };\n      const newState = { ...state, list: newList };\n\n      return newState;\n    }\n\n    case STOP_ITEM_ACTION_LOAD: {\n      const index = action.payload;\n      const newList = state.list;\n      newList[index] = { ...newList[index], loadingItemAction: false };\n      const newState = { ...state, list: newList };\n\n      return newState;\n    }\n\n    case UPDATE_LIST: {\n      const newState = { ...state, list: action.payload };\n\n      return newState;\n    }\n\n    case ADD_ITEM: {\n      state.list.push(action.payload);\n\n      return state;\n    }\n\n    case REMOVE_ITEM: {\n      const { id } = action.payload;\n\n      return {\n        ...state,\n        list: state.list.filter((item) => item.id !== id),\n      };\n    }\n\n    case UPDATE_ITEM: {\n      const todo = action.payload;\n      const index = state.list.findIndex((item) => item.id === todo.id);\n\n      state.list[index] = todo;\n\n      return state;\n    }\n\n    case UPDATE_STATUS: {\n      const { id, status } = action.payload;\n\n      return {\n        ...state,\n        list: state.list.map((item) => {\n          if (item.id === id) item.done = status;\n\n          return item;\n        }),\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default reducer;\n","import { combineReducers, createStore } from \"redux\";\n\nimport todo from \"./todo/reducers\";\n\nconst reducers = combineReducers({\n  todo\n});\n\nconst makeStore = () => {\n  const store = createStore(reducers);\n\n  return store;\n};\n\nexport default makeStore();","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}