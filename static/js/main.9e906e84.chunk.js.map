{"version":3,"sources":["components/input/index.tsx","components/modalTodo/index.tsx","components/primaryButton/index.tsx","components/todoItem/index.tsx","components/notification/index.ts","services/todoCrud.ts","store/todo/types.ts","store/todo/actions.ts","components/todoList/index.tsx","components/userAvatar/index.tsx","components/header/index.tsx","App.tsx","store/todo/reducers.ts","store/index.ts","index.tsx"],"names":["TextArea","Input","InputTextComponent","props","className","size","allowClear","children","InputTextAreaComponent","rows","DatePickerComponent","TimePickerComponent","initialFormvalues","id","color","description","date","time","ModalTodo","Form","useForm","form","useEffect","visible","setFormValues","setFieldsValue","length","moment","onOk","submit","onCancel","okText","cancelText","title","onFinish","Item","name","style","display","rules","required","message","Group","value","background","placeholder","format","PrimaryButtonComponent","type","TodoItemComponent","expiredDateClass","todoDate","isAfter","Date","utc","onClick","onEditTodo","done","onChangeStatusTodo","Notification","notification","duration","listTodo","filter","stored","localStorage","getItem","list","JSON","parse","status","item","ok","data","error","console","log","START_LIST_LOAD","STOP_LIST_LOAD","START_SAVE_LOAD","STOP_SAVE_LOAD","START_ITEM_ACTION_LOAD","STOP_ITEM_ACTION_LOAD","UPDATE_LIST","ADD_ITEM","REMOVE_ITEM","UPDATE_ITEM","UPDATE_STATUS","todoUpdateList","payload","emptyTodo","TodoListComponent","useState","selectedOptionMenu","setSelectedOptionMenu","showTodoModal","setShowTodoModal","selectedTodo","setSelectedTodo","dispatch","useDispatch","todoOnReducer","useSelector","state","todo","handleOpenModalTodo","handleCloseModalTodo","handleSelectOptionMenu","selected","undefined","handleUpdateStatusTodo","todoStored","map","setItem","stringify","updateStatusTodo","includes","todoRemoveItem","key","handleEditTodo","image","Empty","PRESENTED_IMAGE_SIMPLE","values","updateTodo","randomBytes","toString","push","saveTodo","todoAddItem","UserAvatarComponent","HeaderComponent","App","initialState","loadingList","loadingSave","reducer","action","newState","index","newList","loadingItemAction","findIndex","reducers","combineReducers","makeStore","createStore","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.9e906e84.chunk.js","sourcesContent":["import {\n  Input,\n  DatePickerProps,\n  TimePickerProps,\n  DatePicker,\n  TimePicker,\n  InputProps,\n} from \"antd\";\nimport { TextAreaProps } from \"antd/lib/input\";\nimport InputMask, { Props as InputMaskProps } from \"react-input-mask\";\n\nconst { TextArea } = Input;\n\nexport function InputTextComponent(props: InputProps) {\n  return (\n    <div className=\"input-text-area-component-content\">\n      <Input size=\"large\" allowClear={true} {...props}>\n        {props.children}\n      </Input>\n    </div>\n  );\n}\n\nexport function InputTextAreaComponent(props: TextAreaProps) {\n  return (\n    <div className=\"input-text-area-component-content\">\n      <TextArea size=\"large\" allowClear={true} rows={6} {...props}>\n        {props.children}\n      </TextArea>\n    </div>\n  );\n}\n\nexport function DatePickerComponent(props: DatePickerProps) {\n  return (\n    <div className=\"date-picker-component-content\">\n      <DatePicker size=\"large\" allowClear={true} {...props} />\n    </div>\n  );\n}\n\nexport function TimePickerComponent(props: TimePickerProps) {\n  return (\n    <div className=\"date-picker-component-content\">\n      <TimePicker size=\"large\" allowClear={true} {...props} />\n    </div>\n  );\n}\n\nexport const InputMaskComponent = (props: InputMaskProps) => (\n  <InputMask {...props}>\n    {(inputProps: InputProps) => (\n      <Input allowClear={true} size=\"large\" {...inputProps} />\n    )}\n  </InputMask>\n);\n","import { Modal, Form, Radio } from \"antd\";\nimport moment from \"moment\";\nimport { useEffect } from \"react\";\nimport { TodoItemInterface } from \"../../store/todo/model\";\n\nimport {\n  InputTextAreaComponent,\n  InputTextComponent,\n  DatePickerComponent,\n  TimePickerComponent,\n} from \"../input\";\n\nimport \"./style.css\";\n\ninterface Props extends TodoItemInterface {\n  visible: boolean;\n  title: string;\n\n  onOk: (item: any) => void;\n  onCancel: () => void;\n}\n\nconst initialFormvalues = {\n  id: null,\n  color: null,\n  description: null,\n  date: \"\",\n  time: \"\",\n};\n\nexport const ModalTodo = (props: Props) => {\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    if (props.visible) setFormValues();\n  }, [props.visible]);\n\n  const setFormValues = () => {\n    if (props.id) {\n      form.setFieldsValue({\n        ...props,\n        date: props.date && props.date.length ? moment(props.date) : null,\n        time: props.time && props.time.length ? moment(props.time) : null,\n      });\n    } else {\n      form.setFieldsValue({ ...initialFormvalues });\n    }\n  };\n\n  return (\n    <Modal\n      onOk={() => form.submit()}\n      visible={props.visible}\n      onCancel={props.onCancel}\n      okText=\"Salvar\"\n      cancelText=\"Cancelar\"\n      title={props.id ? \"Editar tarefa\" : \"Nova tarefa\"}\n    >\n      <Form\n        onFinish={props.onOk}\n        form={form}\n        className=\"modal-todo-component-content\"\n      >\n        <Form.Item name=\"id\" style={{ display: \"none\" }}>\n          <InputTextComponent />\n        </Form.Item>\n\n        <Form.Item name=\"done\" style={{ display: \"none\" }}>\n          <InputTextComponent />\n        </Form.Item>\n\n        <Form.Item\n          name=\"color\"\n          rules={[{ required: true, message: \"Escolha uma cor\" }]}\n          className=\"color-palette\"\n        >\n          <Radio.Group>\n            <Radio value=\"F4A261\" style={{ background: \"#F4A261\" }} />\n            <Radio value=\"FFC6FF\" style={{ background: \"#FFC6FF\" }} />\n            <Radio value=\"FFADAD\" style={{ background: \"#FFADAD\" }} />\n            <Radio value=\"CAFFBF\" style={{ background: \"#CAFFBF\" }} />\n            <Radio value=\"A0C4FF\" style={{ background: \"#A0C4FF\" }} />\n          </Radio.Group>\n        </Form.Item>\n\n        <Form.Item\n          name=\"description\"\n          rules={[\n            {\n              required: true,\n              message: \"Insira uma descrição\",\n            },\n          ]}\n          className=\"input-text\"\n        >\n          <InputTextAreaComponent placeholder=\"Descrição\" />\n        </Form.Item>\n\n        <div className=\"input-date-time\">\n          <Form.Item name=\"date\">\n            <DatePickerComponent format=\"DD/MM/YYYY\"/>\n          </Form.Item>\n          <Form.Item name=\"time\">\n            <TimePickerComponent format=\"HH:mm\"/>\n          </Form.Item>\n        </div>\n      </Form>\n    </Modal>\n  );\n};\n","import { Button, ButtonProps } from \"antd\";\n\nimport \"./style.css\";\n\ninterface PropsInterface extends ButtonProps {}\n\nexport default function PrimaryButtonComponent(props: PropsInterface) {\n  return (\n    <div className=\"primary-button-component-content\">\n      <Button type=\"primary\" {...props}>{props.children}</Button>\n    </div>\n  )\n}","import moment from \"moment\";\nimport {\n  FaPen,\n  FaRegCircle,\n  FaRegCalendarAlt,\n  FaClock,\n  FaCheckCircle,\n} from \"react-icons/fa\";\nimport { TodoItemInterface } from \"../../store/todo/model\";\n\nimport \"./style.css\";\n\ninterface ItemPropsIterface extends TodoItemInterface {\n  onEditTodo: () => void;\n  onChangeStatusTodo: () => void;\n}\n\nexport default function TodoItemComponent(props: ItemPropsIterface) {\n  let expiredDateClass = \"\";\n\n  if (props.date) {\n    const todoDate = moment(props.date);\n    const today = moment();\n\n    if(today.isAfter(todoDate, \"date\")) expiredDateClass = \"date-expired\";\n  }\n  return (\n    <div\n      className=\"todo-item-component-content\"\n      style={{ background: `#${props.color}` }}\n    >\n      <div className=\"col-1\">\n        <div className=\"description\">{props.description}</div>\n\n        <div className=\"date-time\">\n          <div className={`date ${expiredDateClass}`}>\n            {props.date && (\n              <>\n                <FaRegCalendarAlt />\n                <span>{moment(new Date(props.date)).utc().format(\"DD/MM/YYYY\")}</span>\n              </>\n            )}\n          </div>\n          <div className=\"time\">\n            {props.time && (\n              <>\n                <FaClock />\n                <span>{moment(new Date(props.time)).utc().format(\"HH:mm\")}</span>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"col-2\">\n        <FaPen onClick={props.onEditTodo} />\n        {props.done ? (\n          <FaCheckCircle onClick={props.onChangeStatusTodo} />\n        ) : (\n          <FaRegCircle onClick={props.onChangeStatusTodo} />\n        )}\n      </div>\n    </div>\n  );\n}\n","import { notification } from \"antd\";\n\ninterface Props {\n  message: string;\n  description: string;\n  type: \"success\" | \"error\" | \"warning\" | \"info\";\n}\n\nexport const Notification = (props: Props) => {\n  return notification[props.type]({\n    message: props.message,\n    description: props.description,\n    duration: 5,\n  });\n};\n","import { randomBytes } from \"crypto\";\n\nimport { Notification } from \"../components/notification\";\nimport { TodoItemInterface } from \"../store/todo/model\";\n\ninterface ResponseInterface {\n  ok: boolean;\n  data?: any;\n}\n\ninterface ListFilter {\n  status?: \"done\" | \"todo\";\n}\n\nexport const listTodo = (filter: ListFilter): ResponseInterface => {\n  try {\n    const stored = localStorage.getItem(\"todo@list#v2\");//todoList;\n    let list = stored ? JSON.parse(stored) : [];\n\n    if (list.length && filter.status) {\n      list = list.filter((item: TodoItemInterface) => item.done === (filter.status === \"done\"));\n    }\n\n    return { ok: true, data: list };\n  } catch (error) {\n    Notification({\n      type: \"error\",\n      description: \"Lista de tarefas\",\n      message:\n        \"Houve um erro ao tentar trazer a lista de tarefas. Por favor, tente novamente.\",\n    });\n\n    console.log(\"SAVE NEW TODO ERROR\", error);\n\n    return { ok: false };\n  }\n};\n\nexport const saveTodo = (todo: TodoItemInterface): ResponseInterface => {\n  try {\n    todo.id = randomBytes(8).toString(\"hex\");\n\n    const stored = localStorage.getItem(\"todo@list#v2\");\n    const todoStored: Array<TodoItemInterface> = stored ? JSON.parse(stored) : [];\n\n    todoStored.push(todo);\n    localStorage.setItem(\"todo@list#v2\", JSON.stringify(todoStored));\n\n    return { ok: true, data: todo };\n  } catch (error) {\n    Notification({\n      type: \"error\",\n      description: \"Salvar tarefa\",\n      message:\n        \"Houve um erro ao tentar criar a tarefa. Por favor, tente novamente.\",\n    });\n\n    console.log(\"SAVE NEW TODO ERROR\", error);\n\n    return { ok: false };\n  }\n};\n\nexport const updateTodo = (todo: TodoItemInterface): ResponseInterface => {\n  try {\n    let todoStored: Array<TodoItemInterface> = JSON.parse(localStorage.getItem(\"todo@list#v2\")!);\n    \n    todoStored = todoStored.map(item => {\n      if(item.id === todo.id) item = todo;\n\n      return item;\n    });\n\n    localStorage.setItem(\"todo@list#v2\", JSON.stringify(todoStored));\n\n    return { ok: true, data: todo };\n  } catch (error) {\n    Notification({\n      type: \"error\",\n      description: \"Salvar tarefa\",\n      message:\n        \"Houve um erro ao tentar salvar a tarefa. Por favor, tente novamente.\",\n    });\n\n    console.log(\"UPDATE TODO ERROR\", error);\n\n    return { ok: false };\n  }\n};\n\nexport const updateStatusTodo = (\n  id: string,\n  status: boolean\n): ResponseInterface => {\n  try {\n    let todoStored: Array<TodoItemInterface> = JSON.parse(localStorage.getItem(\"todo@list#v2\")!);\n    \n    let todo;\n    todoStored = todoStored.map(item => {\n      if(item.id === id) {\n        item.done = status;\n        todo = item;\n      }\n\n      return item;\n    });\n\n    localStorage.setItem(\"todo@list#v2\", JSON.stringify(todoStored));\n\n    return { ok: true, data: todo };\n  } catch (error) {\n    Notification({\n      type: \"error\",\n      description: \"Salvar tarefa\",\n      message:\n        \"Houve um erro ao tentar salvar a tarefa. Por favor, tente novamente.\",\n    });\n\n    console.log(\"UPDATE TODO STATUS ERROR\", error);\n\n    return { ok: false };\n  }\n};\n","export const START_LIST_LOAD = \"START_TODO_LIST_LOAD\";\nexport const STOP_LIST_LOAD = \"STOP_TODO_LIST_LOAD\";\nexport const START_SAVE_LOAD = \"START_TODO_SAVE_LOAD\";\nexport const STOP_SAVE_LOAD = \"STOP_TODO_SAVE_LOAD\";\nexport const START_ITEM_ACTION_LOAD = \"START_TODO_ITEM_ACTION_LOAD\";\nexport const STOP_ITEM_ACTION_LOAD = \"STOP_TODO_ITEM_ACTION_LOAD\";\nexport const UPDATE_LIST = \"UPDATE_TODO_LIST\";\nexport const ADD_ITEM = \"ADD_TODO_ITEM\";\nexport const REMOVE_ITEM = \"REMOVE_TODO_ITEM\";\nexport const UPDATE_ITEM = \"UPDATE_TODO_ITEM\";\nexport const UPDATE_STATUS = \"UPDATE_STATUS_TODO_ITEM\";\n","import { TodoItemInterface } from \"./model\";\nimport {\n  START_ITEM_ACTION_LOAD,\n  START_LIST_LOAD,\n  START_SAVE_LOAD,\n  STOP_ITEM_ACTION_LOAD,\n  STOP_LIST_LOAD,\n  STOP_SAVE_LOAD,\n  ADD_ITEM,\n  UPDATE_LIST,\n  UPDATE_ITEM,\n  UPDATE_STATUS,\n  REMOVE_ITEM,\n} from \"./types\";\n\nexport const todoStartListLoading = () => ({\n  type: START_LIST_LOAD,\n});\n\nexport const todoStopListLoading = () => ({\n  type: STOP_LIST_LOAD,\n});\n\nexport const todoStartSaveLoading = () => ({\n  type: START_SAVE_LOAD,\n});\n\nexport const todoStopSaveLoading = () => ({\n  type: STOP_SAVE_LOAD,\n});\n\nexport const todoStartItemActionLoading = (payload: number) => ({\n  type: START_ITEM_ACTION_LOAD,\n  payload,\n});\n\nexport const todoStopItemActionLoading = (payload: number) => ({\n  type: STOP_ITEM_ACTION_LOAD,\n  payload,\n});\n\nexport const todoUpdateList = (payload: TodoItemInterface[]) => ({\n  type: UPDATE_LIST,\n  payload,\n});\n\nexport const todoAddItem = (payload: TodoItemInterface) => ({\n  type: ADD_ITEM,\n  payload,\n});\n\nexport const todoRemoveItem = (payload: { id: string }) => ({\n  type: REMOVE_ITEM,\n  payload,\n});\n\nexport const todoUpdateItem = (payload: TodoItemInterface) => ({\n  type: UPDATE_ITEM,\n  payload,\n});\n\nexport const todoUpdateStatusItem = (payload: {\n  id: string;\n  status: boolean;\n}) => ({\n  type: UPDATE_STATUS,\n  payload,\n});\n","import { useEffect, useState } from \"react\";\nimport { Empty } from \"antd\";\n\nimport { ModalTodo } from \"../modalTodo\";\nimport PrimaryButtonComponent from \"../primaryButton\";\nimport TodoItemComponent from \"../todoItem\";\n\nimport {\n  listTodo,\n  saveTodo,\n  updateStatusTodo,\n  updateTodo,\n} from \"../../services/todoCrud\";\n\nimport \"./style.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { TodoItemInterface, TodoListInterface } from \"../../store/todo/model\";\nimport {\n  todoAddItem,\n  todoRemoveItem,\n  todoUpdateItem,\n  todoUpdateList,\n  todoUpdateStatusItem,\n} from \"../../store/todo/actions\";\nimport moment from \"moment\";\n\nconst emptyTodo = {\n  color: \"\",\n  description: \"\",\n  date: \"\",\n  time: \"\",\n  done: false,\n};\n\nexport default function TodoListComponent() {\n  const [selectedOptionMenu, setSelectedOptionMenu] = useState(\"todo\");\n  const [showTodoModal, setShowTodoModal] = useState(false);\n  const [selectedTodo, setSelectedTodo] =\n    useState<TodoItemInterface>(emptyTodo);\n\n  const dispatch = useDispatch();\n\n  const todoOnReducer = useSelector(\n    (state: { todo: TodoListInterface }) => state.todo\n  );\n\n  useEffect(() => {\n    const { ok, data } = listTodo({ status: \"todo\" });\n    if (ok) dispatch(todoUpdateList(data));\n  }, []);\n\n  const handleOpenModalTodo = () => {\n    setShowTodoModal(true);\n  };\n\n  const handleCloseModalTodo = () => {\n    setShowTodoModal(false);\n    setSelectedTodo(emptyTodo);\n  };\n\n  const handleEditTodo = (item: TodoItemInterface) => {\n    setSelectedTodo(item);\n    handleOpenModalTodo();\n  };\n\n  const handleSelectOptionMenu = (selected: \"done\" | \"todo\" | \"all\") => {\n    setSelectedOptionMenu(selected);\n\n    const status = selected !== \"all\" ? selected : undefined;\n\n    const { ok, data } = listTodo({ status });\n\n    if (ok) dispatch(todoUpdateList(data));\n  };\n\n  const handleSaveTodo = (values: TodoItemInterface) => {\n    values.date = values.date ? moment(new Date(values.date)).utc().format() : \"\";\n    values.time = values.time ? moment(new Date(values.time)).utc().format() : \"\";\n    values.done = values.done || false;\n\n    if (values.id) {\n      const { ok, data } = updateTodo(values);\n\n      if (ok) dispatch(todoUpdateItem(data));\n    } else {\n      const { ok, data } = saveTodo(values);\n\n      if (ok) dispatch(todoAddItem(data));\n    }\n\n    handleCloseModalTodo();\n  };\n\n  const handleUpdateStatusTodo = (id: string, status: boolean) => {   \n    const { ok } = updateStatusTodo(id, status);\n\n    if (ok) {\n      dispatch(todoUpdateStatusItem({ id, status }));\n\n      if (\n        (status && ![\"done\", \"all\"].includes(selectedOptionMenu)) ||\n        (!status && [\"done\"].includes(selectedOptionMenu))\n      ) {\n        dispatch(todoRemoveItem({ id }));\n      }\n    }\n  };\n\n  return (\n    <div className=\"todo-list-component-content\">\n      <div className=\"new-todo-content\">\n        <span>Aqui está o que temos para fazer.</span>\n        <PrimaryButtonComponent onClick={handleOpenModalTodo}>\n          Nova tarefa\n        </PrimaryButtonComponent>\n      </div>\n\n      <div className=\"menu\">\n        <span\n          className={selectedOptionMenu === \"done\" ? \"menu-selected\" : \"\"}\n          onClick={() => handleSelectOptionMenu(\"done\")}\n        >\n          Feitas\n        </span>\n        <span\n          className={selectedOptionMenu === \"todo\" ? \"menu-selected\" : \"\"}\n          onClick={() => handleSelectOptionMenu(\"todo\")}\n        >\n          À fazer\n        </span>\n        <span\n          className={selectedOptionMenu === \"all\" ? \"menu-selected\" : \"\"}\n          onClick={() => handleSelectOptionMenu(\"all\")}\n        >\n          Todas\n        </span>\n      </div>\n\n      <div className=\"list\">\n        {todoOnReducer.list.length ? (\n          todoOnReducer.list.map((item: TodoItemInterface) => (\n            <TodoItemComponent\n              {...item}\n              key={item.id}\n              onEditTodo={() => handleEditTodo(item)}\n              onChangeStatusTodo={() =>\n                handleUpdateStatusTodo(item.id!, !item.done)\n              }\n            />\n          ))\n        ) : (\n          <Empty\n            description=\"Lista vazia\"\n            className=\"list-empty\"\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n          />\n        )}\n      </div>\n\n      <ModalTodo\n        visible={showTodoModal}\n        title=\"Nova tarefa\"\n        onOk={handleSaveTodo}\n        onCancel={handleCloseModalTodo}\n        {...selectedTodo}\n      />\n    </div>\n  );\n}\n","import { FaUserCircle } from \"react-icons/fa\";\n\nimport \"./style.css\";\n\nexport default function UserAvatarComponent() {\n  return (\n    <div className=\"user-avatar-component-content\">\n      <FaUserCircle />\n    </div>\n  )\n}","import UserAvatarComponent from \"../userAvatar\";\nimport \"./style.css\";\n\nexport default function HeaderComponent() {\n  return (\n    <div className=\"header-content\">\n      <span>Olá, Seja bem vindo(a) de volta!</span>\n      <UserAvatarComponent />\n    </div>\n  );\n}\n","import TodoListComponent from \"./components/todoList\";\nimport HeaderComponent from \"./components/header\";\n\nimport \"./app.css\";\n\nfunction App() {\n  return (\n    <div className=\"app-content\">\n      <HeaderComponent />\n      <TodoListComponent />\n    </div>\n  );\n}\n\nexport default App;\n","import { TodoListInterface } from \"./model\";\nimport {\n  START_LIST_LOAD,\n  START_SAVE_LOAD,\n  STOP_LIST_LOAD,\n  STOP_SAVE_LOAD,\n  ADD_ITEM,\n  START_ITEM_ACTION_LOAD,\n  STOP_ITEM_ACTION_LOAD,\n  UPDATE_LIST,\n  UPDATE_ITEM,\n  UPDATE_STATUS,\n  REMOVE_ITEM,\n} from \"./types\";\n\nconst initialState: TodoListInterface = {\n  loadingList: false,\n  loadingSave: false,\n  list: [],\n};\n\ninterface Action {\n  type: string;\n  payload: any;\n}\n\nconst reducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case START_LIST_LOAD: {\n      const newState = { ...state, loadingList: true };\n\n      return newState;\n    }\n\n    case STOP_LIST_LOAD: {\n      const newState = { ...state, loadingList: false };\n\n      return newState;\n    }\n\n    case START_SAVE_LOAD: {\n      const newState = { ...state, loadingSave: true };\n\n      return newState;\n    }\n\n    case STOP_SAVE_LOAD: {\n      const newState = { ...state, loadingSave: false };\n\n      return newState;\n    }\n\n    case START_ITEM_ACTION_LOAD: {\n      const index = action.payload;\n      const newList = state.list;\n      newList[index] = { ...newList[index], loadingItemAction: true };\n      const newState = { ...state, list: newList };\n\n      return newState;\n    }\n\n    case STOP_ITEM_ACTION_LOAD: {\n      const index = action.payload;\n      const newList = state.list;\n      newList[index] = { ...newList[index], loadingItemAction: false };\n      const newState = { ...state, list: newList };\n\n      return newState;\n    }\n\n    case UPDATE_LIST: {\n      const newState = { ...state, list: action.payload };\n\n      return newState;\n    }\n\n    case ADD_ITEM: {\n      state.list.push(action.payload);\n\n      return state;\n    }\n\n    case REMOVE_ITEM: {\n      const { id } = action.payload;\n\n      return {\n        ...state,\n        list: state.list.filter((item) => item.id !== id),\n      };\n    }\n\n    case UPDATE_ITEM: {\n      const todo = action.payload;\n      const index = state.list.findIndex((item) => item.id === todo.id);\n\n      state.list[index] = todo;\n\n      return state;\n    }\n\n    case UPDATE_STATUS: {\n      const { id, status } = action.payload;\n\n      return {\n        ...state,\n        list: state.list.map((item) => {\n          if (item.id === id) item.done = status;\n\n          return item;\n        }),\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default reducer;\n","import { combineReducers, createStore } from \"redux\";\n\nimport todo from \"./todo/reducers\";\n\nconst reducers = combineReducers({\n  todo\n});\n\nconst makeStore = () => {\n  const store = createStore(reducers);\n\n  return store;\n};\n\nexport default makeStore();","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}